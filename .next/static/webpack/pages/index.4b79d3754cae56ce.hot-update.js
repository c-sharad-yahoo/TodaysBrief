"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utils/storage.ts":
/*!******************************!*\
  !*** ./src/utils/storage.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   archiveDailyBrief: function() { return /* binding */ archiveDailyBrief; },\n/* harmony export */   getArchivedBriefs: function() { return /* binding */ getArchivedBriefs; },\n/* harmony export */   getBriefByDate: function() { return /* binding */ getBriefByDate; },\n/* harmony export */   getBriefsGroupedByMonth: function() { return /* binding */ getBriefsGroupedByMonth; },\n/* harmony export */   getDailyBrief: function() { return /* binding */ getDailyBrief; },\n/* harmony export */   saveDailyBrief: function() { return /* binding */ saveDailyBrief; },\n/* harmony export */   searchBriefs: function() { return /* binding */ searchBriefs; }\n/* harmony export */ });\n/* harmony import */ var _barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! __barrel_optimize__?names=format!=!date-fns */ \"__barrel_optimize__?names=format!=!./node_modules/date-fns/esm/index.js\");\n\nconst STORAGE_KEY = \"todays-brief-data\";\nconst ARCHIVE_KEY = \"todays-brief-archive\";\nfunction saveDailyBrief(data) {\n    if (false) {}\n    try {\n        // Archive any existing content before saving new content\n        const existingData = getDailyBrief();\n        if (existingData) {\n            archiveDailyBrief(existingData);\n        }\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n    } catch (error) {\n        console.error(\"Error saving daily brief:\", error);\n    }\n}\nfunction getDailyBrief() {\n    if (false) {}\n    try {\n        const stored = localStorage.getItem(STORAGE_KEY);\n        return stored ? JSON.parse(stored) : null;\n    } catch (error) {\n        console.error(\"Error getting daily brief:\", error);\n        return null;\n    }\n}\nfunction archiveDailyBrief(data) {\n    if (false) {}\n    try {\n        const archive = getArchivedBriefs();\n        const dateKey = (0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(new Date(data.date), \"yyyy-MM-dd\");\n        archive[dateKey] = data;\n        // Store all content without purging\n        localStorage.setItem(ARCHIVE_KEY, JSON.stringify(archive));\n    } catch (error) {\n        console.error(\"Error archiving daily brief:\", error);\n    }\n}\nfunction getArchivedBriefs() {\n    if (false) {}\n    try {\n        const archived = localStorage.getItem(ARCHIVE_KEY);\n        return archived ? JSON.parse(archived) : {};\n    } catch (error) {\n        console.error(\"Error getting archived briefs:\", error);\n        return {};\n    }\n}\nfunction getBriefByDate(date) {\n    if (false) {}\n    // First try exact match\n    const archive = getArchivedBriefs();\n    if (archive[date]) {\n        return archive[date];\n    }\n    // If no exact match, try to find by parsing dates\n    for (const [key, brief] of Object.entries(archive)){\n        const briefDate = (0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(new Date(brief.date), \"yyyy-MM-dd\");\n        if (briefDate === date) {\n            return brief;\n        }\n    }\n    return null;\n}\nfunction searchBriefs(query, category) {\n    if (false) {}\n    // Get current daily brief\n    const currentBrief = getDailyBrief();\n    // Get archived briefs\n    const archive = getArchivedBriefs();\n    const results = [];\n    // Search current brief if it exists\n    if (currentBrief) {\n        const searchText = \"\".concat(currentBrief.title, \" \").concat(currentBrief.primary_focus.title, \" \").concat(currentBrief.primary_focus.summary, \" \").concat(currentBrief.sections.map((s)=>s.title + \" \" + s.summary).join(\" \")).toLowerCase();\n        if (searchText.includes(query.toLowerCase())) {\n            if (!category || currentBrief.primary_focus.category.toLowerCase() === category.toLowerCase() || currentBrief.sections.some((s)=>s.id.toLowerCase() === category.toLowerCase())) {\n                results.push(currentBrief);\n            }\n        }\n    }\n    // Search archived briefs\n    Object.values(archive).forEach((brief)=>{\n        const searchText = \"\".concat(brief.title, \" \").concat(brief.primary_focus.title, \" \").concat(brief.primary_focus.summary, \" \").concat(brief.sections.map((s)=>s.title + \" \" + s.summary).join(\" \")).toLowerCase();\n        if (searchText.includes(query.toLowerCase())) {\n            if (!category || brief.primary_focus.category.toLowerCase() === category.toLowerCase() || brief.sections.some((s)=>s.id.toLowerCase() === category.toLowerCase())) {\n                // Avoid duplicates by checking if current brief is already added\n                const isDuplicate = currentBrief && (0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(new Date(brief.date), \"yyyy-MM-dd\") === (0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(new Date(currentBrief.date), \"yyyy-MM-dd\");\n                if (!isDuplicate) {\n                    results.push(brief);\n                }\n            }\n        }\n    });\n    return results.sort((a, b)=>new Date(b.date).getTime() - new Date(a.date).getTime());\n}\nfunction getBriefsGroupedByMonth() {\n    if (false) {}\n    const archive = getArchivedBriefs();\n    const monthlyGroups = {};\n    Object.values(archive).forEach((brief)=>{\n        const date = new Date(brief.date);\n        const monthKey = (0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(date, \"yyyy-MM\");\n        const monthName = (0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(date, \"MMMM yyyy\");\n        if (!monthlyGroups[monthKey]) {\n            monthlyGroups[monthKey] = {\n                month: monthName,\n                year: date.getFullYear(),\n                count: 0,\n                briefs: []\n            };\n        }\n        monthlyGroups[monthKey].count++;\n        monthlyGroups[monthKey].briefs.push(brief);\n    });\n    // Sort briefs within each month by date (newest first)\n    Object.values(monthlyGroups).forEach((group)=>{\n        group.briefs.sort((a, b)=>new Date(b.date).getTime() - new Date(a.date).getTime());\n    });\n    // Return months sorted by date (newest first)\n    return Object.values(monthlyGroups).sort((a, b)=>b.year - a.year || b.month.localeCompare(a.month));\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/storage.ts\n"));

/***/ })

});